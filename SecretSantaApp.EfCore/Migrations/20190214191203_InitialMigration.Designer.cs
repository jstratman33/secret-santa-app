// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecretSantaApp.EfCore;

namespace SecretSantaApp.EfCore.Migrations
{
    [DbContext(typeof(SecretSantaContext))]
    [Migration("20190214191203_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AdminId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("ExchangeTime");

                    b.Property<DateTime>("ListDeadline");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.GroupMemberLink", b =>
                {
                    b.Property<long>("GroupId");

                    b.Property<long>("MemberId");

                    b.HasKey("GroupId", "MemberId");

                    b.HasIndex("MemberId");

                    b.ToTable("GroupMemberLink");
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.Invite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<long>("GroupId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Invites");
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.List", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GroupId");

                    b.Property<bool>("IsPrimary");

                    b.Property<string>("Name");

                    b.Property<long>("OwnerId");

                    b.Property<long>("SantaId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SantaId");

                    b.ToTable("Lists");
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.ListItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("IsPurchased");

                    b.Property<long>("ListId");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.ToTable("ListItems");
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.Group", b =>
                {
                    b.HasOne("SecretSantaApp.Domain.Enitities.User", "Admin")
                        .WithMany("AdminOf")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.GroupMemberLink", b =>
                {
                    b.HasOne("SecretSantaApp.Domain.Enitities.Group", "Group")
                        .WithMany("MemberLinks")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SecretSantaApp.Domain.Enitities.User", "Member")
                        .WithMany("GroupLinks")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.Invite", b =>
                {
                    b.HasOne("SecretSantaApp.Domain.Enitities.Group", "Group")
                        .WithMany("Invites")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.List", b =>
                {
                    b.HasOne("SecretSantaApp.Domain.Enitities.Group", "Group")
                        .WithMany("Lists")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SecretSantaApp.Domain.Enitities.User", "Owner")
                        .WithMany("Lists")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SecretSantaApp.Domain.Enitities.User", "Santa")
                        .WithMany("SantaLists")
                        .HasForeignKey("SantaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("SecretSantaApp.Domain.Enitities.ListItem", b =>
                {
                    b.HasOne("SecretSantaApp.Domain.Enitities.List", "List")
                        .WithMany("Items")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
